{
    "swagger": "2.0",
    "info": {
        "title": "Integrations API",
        "description": "Interact with the core in a RESTful manner",
        "version": "0.0.1"
    },
    "host": "api.qa.cuanswers.com",
    "schemes": [
        "https"
    ],
    "basePath": "/api",
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json",
        "text/json"
    ],
    "paths": {
        "/credit_unions/{credit_union_id}/verification/candidates": {
            "post": {
                "summary": "Post a candidate for ID verification",
                "description": "This endpoint is used for initial posting of a candidate for ID verification",
                "parameters": [
                    {
                        "$ref": "#/parameters/credit_union_id"
                    },
                    {
                        "$ref": "#/parameters/candidate_body"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "description": "The location of the created candidate entity"
                            }
                        }
                    }
                },
                "tags": [
                    "Candidate"
                ]
            }
        },
        "/credit_unions/{credit_union_id}/verification/candidates/{candidate_id}": {
            "get": {
                "description": "Get a specific candidate",
                "parameters": [
                    {
                        "$ref": "#/parameters/credit_union_id"
                    },
                    {
                        "$ref": "#/parameters/candidate_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the specified candidate",
                        "schema": {
                            "$ref": "#/definitions/candidate"
                        }
                    }
                },
                "tags": [
                    "Candidate"
                ]
            }
        },
        "/credit_unions/{credit_union_id}/verification/candidates/{candidate_id}/questions": {
            "get": {
                "description": "Get a specific candidate",
                "parameters": [
                    {
                        "$ref": "#/parameters/credit_union_id"
                    },
                    {
                        "$ref": "#/parameters/candidate_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questions to verify candidate identity",
                        "schema": {
                            "$ref": "#/definitions/questions"
                        }
                    },
                    "429": {
                        "description": "Request for questions failed due to excessive requests"
                    }
                },
                "tags": [
                    "Questions",
                    "Candidate"
                ]
            }
        },
        "/credit_unions/{credit_union_id}/verification/candidates/{candidate_id}/questions/{questions_id}/answers": {
            "post": {
                "description": "Post answers back to a question set for full verification score",
                "parameters": [
                    {
                        "$ref": "#/parameters/credit_union_id"
                    },
                    {
                        "$ref": "#/parameters/candidate_id"
                    },
                    {
                        "$ref": "#/parameters/questions_id"
                    },
                    {
                        "$ref": "#/parameters/answers_body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Score results from the answer post",
                        "schema": {
                            "$ref": "#/definitions/score_results"
                        }
                    },
                    "408": {
                        "description": "Experian Session Timeout"
                    }
                },
                "tags": [
                    "Candidate",
                    "Questions",
                    "Answers"
                ]
            }
        },
		"/credit_unions/{credit_union_id}/membership/applicants": {
            "post": {
                "summary": "Post an applicant for credit union membership (MAP)",
                "description": "This endpoint is used for MAP submission",
                "parameters": [
                    {
                        "$ref": "#/parameters/credit_union_id"
                    },
                    {
                        "$ref": "#/parameters/applicants_body"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "description": "The location of the created applicant entity"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/applicants_response_body"
                        }
                    },
                    "409": {
                        "description": "Conflict with posted applicant - usually indidicative of a duplicate app submission",
                        "schema": {
                            "$ref": "#/definitions/applicants_response_body"
                        }
                    }
                },
                "tags": [
                    "Applicant",
                    "MAP"
                ]
            }
        }
    },
    "parameters": {
        "credit_union_id": {
            "name": "credit_union_id",
            "description": "Credit union ID (CUXXXXX)",
            "in": "path",
            "type": "string",
            "required": true
        },
        "candidate_id": {
            "name": "candidate_id",
            "in": "path",
            "type": "string",
            "required": true
        },
        "questions_id": {
            "name": "questions_id",
            "in": "path",
            "type": "string",
            "required": true
        },
        "candidate_body": {
            "name": "body",
            "in": "body",
            "schema": {
                "$ref": "#/definitions/candidate"
            }
        },
        "applicants_body": {
            "name": "body",
            "in": "body",
            "schema": {
                "$ref": "#/definitions/applicants"
            }
        },
        "answers_body": {
            "name": "body",
            "in": "body",
            "schema": {
                "$ref": "#/definitions/answers"
            }
        }
    },
    "definitions": {
        "candidate": {
          "type": "object",
          "properties": {
            "ssn": {
              "type": "string",
              "description": "The Social Security Number of the candidate (#########)",
              "pattern": "^[0-9]{9}$"
            },
            "first_name": {
              "type": "string",
              "description": "Candidate first name"
            },
            "middle_name": {
              "type": "string",
              "description": "Candidate middle name"
            },
            "last_name": {
              "type": "string",
              "description": "Candidate last name"
            },
            "gender": {
              "type": "string",
              "description": "Candidate gender"
            },
            "date_of_birth": {
              "type": "string",
              "description": "Candidate date of birth (mmddyyyy)",
              "pattern": "^[0-1][0-9][0-3][0-9][1-2][0-9]{3}$"
            },
            "us_citizen": {
              "enum": [
                "Y",
                "N"
              ],
              "description": "Whether or not the candidate is a US citizen (Yes/No)"
            },
            "street_address": {
              "type": "string",
              "description": "Street address (Address line 1) of the candidates primary residence"
            },
            "address_line_2": {
              "type": "string",
              "description": "Address line 2 of the candidates primary residence"
            },
            "city": {
              "type": "string",
              "description": "City in which the candidate resides"
            },
            "state": {
              "type": "string",
              "description": "State (2-digit abbrevation) in which the candidate resides",
              "pattern": "^[A-Z]{2}$"
            },
            "zip": {
              "type": "string",
              "description": "Zip code for the candidates primary residence",
              "pattern": "^[0-9]{5}$"
            },
            "county": {
              "type": "string",
              "description": "County in which the candidate resides"
            },
            "phone": {
              "type": "string",
              "description": "candidates primary contact phone number (#########)",
              "pattern": "^[0-9]{10}$"
            },
            "work_phone": {
              "type": "string",
              "description": "candidates work contact phone number (#########)",
              "pattern": "^[0-9]{10}$"
            },
            "work_extension": {
              "type": "string",
              "description": "candidates work extension",
              "pattern": "^[0-9]{10}$"
            },
            "other_phone": {
              "type": "string",
              "description": "Any other phone",
              "pattern": "^[0-9]{10}$"
            },
            "drivers_license": {
              "type": "string",
              "description": "Candidate drivers license"
            },
            "drivers_license_state": {
              "type": "string",
              "description": "State (2-digit abbrevation) from which the drivers license was issued",
              "pattern": "^[A-Z]{2}$"
            },
            "email_address": {
              "type": "string",
              "description": "Candidate email address",
              "pattern": "^.{1,}@.{1,}.{1,}$"
            },
            "marital_status": {
              "enum": [
                "M",
                "S",
                "U"
              ],
              "description": "Candidate marital status. Married (M), Single (S), or Unknown (U)"
            }
          },
          "required": [
            "ssn",
            "first_name",
            "last_name",
            "date_of_birth",
            "street_address",
            "city",
            "state",
            "zip",
            "phone",
            "email_address"
          ]
        },
        "questions": {
            "type": "object",
            "properties": {
                "precise_id": {
                    "type": "integer",
                    "description": "The precise ID score of the applicant, from experian"
                },
                "session_id": {
                    "type": "string",
                    "description": "The experian session ID, used to continue the conversation"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/question"
                    }
                },
                "errors": {
                    "type": "array",
                    "description": "This will be present if questions were unable to be returned with a successful transaction",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "question": {
            "type": "object",
            "properties": {
                "QuestionType": {
                    "type": "string",
                    "description": "The experian question type"
                },
                "QuestionText": {
                    "type": "string",
                    "description": "The text of the provided question"
                },
                "QuestionSelect": {
                    "type": "object",
                    "properties": {
                        "QuestionChoice": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "answers": {
            "type": "object",
            "properties": {
                "answers": {
                    "type": "array",
                    "minItems": 5,
                    "maxItems": 5,
                    "items": {
                        "$ref": "#/definitions/answer"
                    }
                }
            },
            "required": [
                "answers"
            ]
        },
        "answer": {
            "type": "object",
            "properties": {
                "question_id": {
                    "type": "integer"
                },
                "answer_position": {
                    "type": "integer"
                }
            },
            "required": [
                "question_id",
                "answer_position"
            ]
        },
        "score_results": {
            "type": "object",
            "properties": {
                "questions_id": {
                    "type": "string",
                    "description": "The ID of the questions object this answer was posted to"
                },
                "precise_id": {
                    "type": "integer",
                    "description": "Precise ID score of candidate"
                },
                "pass": {
                    "type": "boolean",
                    "description": "Whether this candidate passes the experian verification"
                },
                "out_of_wallet_score": {
                    "type": "integer",
                    "description": "The score resulting from the submitted answers"
                },
                "errors": {
                    "type": "array",
                    "description": "This will be present if answers were unable to be posted correctly",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "applicant": {
          "type": "object",
          "properties": {
            "ssn": {
              "type": "string",
              "description": "The Social Security Number of the applicant (#########)",
              "pattern": "^[0-9]{9}$"
            },
            "first_name": {
              "type": "string",
              "description": "Applicant first name"
            },
            "middle_name": {
              "type": "string",
              "description": "Applicant middle name"
            },
            "last_name": {
              "type": "string",
              "description": "Applicant last name"
            },
            "maiden_name": {
              "type": "string",
              "description": "Applicant maiden name (Female only)"
            },
            "gender": {
              "type": "string",
              "description": "Applicant gender"
            },
            "date_of_birth": {
              "type": "string",
              "description": "Applicant date of birth (yyyymmdd)",
              "pattern": "^[1-2][0-9]{3}[0-1][0-9][0-3][0-9]$"
            },
            "us_citizen": {
              "enum": [
                "Y",
                "N"
              ],
              "description": "Whether or not the applicant is a US citizen (Yes/No)"
            },
            "street_address": {
              "type": "string",
              "description": "Street address (Address line 1) of the applicants primary residence"
            },
            "address_line_2": {
              "type": "string",
              "description": "Address line 2 of the applicants primary residence"
            },
            "city": {
              "type": "string",
              "description": "City in which the applicant resides"
            },
            "state": {
              "type": "string",
              "description": "State (2-digit abbreviation) in which the applicant resides",
              "pattern": "^[A-Z]{2}$"
            },
            "zip": {
              "type": "string",
              "description": "Zip code for the applicants primary residence",
              "pattern": "^[0-9]{5}$"
            },
            "county": {
              "type": "string",
              "description": "County in which the applicant resides"
            },
            "phone": {
              "type": "string",
              "description": "applicants primary contact phone number (#########)",
              "pattern": "^[0-9]{10}$"
            },
            "work_phone": {
              "type": "string",
              "description": "applicants work contact phone number (#########)",
              "pattern": "^[0-9]{10}$"
            },
            "work_extension": {
              "type": "string",
              "description": "applicants work extension",
              "pattern": "^[0-9]*$"
            },
            "other_phone": {
              "type": "string",
              "description": "Any other phone",
              "pattern": "^[0-9]{10}$"
            },
            "drivers_license": {
              "type": "string",
              "description": "Applicant drivers license"
            },
            "drivers_license_state": {
              "type": "string",
              "description": "State (2-digit abbrevation) from which the drivers license was issued",
              "pattern": "^[A-Z]{2}$"
            },
            "email_address": {
              "type": "string",
              "description": "Applicant email address",
              "pattern": "^.{1,}@.{1,}.{1,}$"
            },
            "marital_status": {
              "enum": [
                "M",
                "S",
                "U"
              ],
              "description": "Applicant marital status. Married (M), Single (S), or Unknown (U)"
            }
          },
          "required": [
            "ssn",
            "first_name",
            "last_name",
            "date_of_birth",
            "street_address",
            "city",
            "state",
            "zip",
            "phone",
            "email_address"
          ]
        },
        "applicants": {
            "allOf": [
            {
              "$ref": "#/definitions/applicant"
            },
            {
              "properties": {
                "promo_code": {
                  "type": "string",
                  "description": "The promotion code for membership application"
                },
                "verification_pass": {
                  "enum": [
                    "Y",
                    "N"
                  ],
                  "description": "Whether the applicant successfully passed ID verification (Y|N)"
                },
                "verification_fail_reason": {
                  "type": "string",
                  "description": "The reason the member failed ID verification, if applicable"
                },
                "joint_applicants": {
                  "type": "array",
                  "description": "Joint applicants applying for membership with the primary applicant",
                  "maxItems": 2,
                  "items": [
                    {
                      "$ref": "#/definitions/applicant"
                    }
                  ]
                }
              }
            }
          ]
        },
        "applicants_response_body": {
            "type": "object",
            "properties": {
                "application_number": {
                    "type": "string",
                    "description": "The application number for the posted application. This number can be used to reference the application on the core"
                },
                "core_response_code": {
                    "type": "string",
                    "description": "Response code from the core-side transaction"
                },
                "core_response_message": {
                    "type": "boolean",
                    "description": "Response message from the core-side transaction"
                },
                "ssn": {
                    "type": "integer",
                    "description": "The ssn from the posted applicant"
                }
            }
        }

    }
}
